//프로세싱 수업 필기 

//2022.03.15 1주차

size(x_size,y_size); #x,y의 사이즈 위치에 숫자를 넣으면 해당하는 픽셀만큼의 창이 생성된다.

background(x); #x값에 0~255까지의 숫자 중 원하는 숫자를 넣으면 배경색이 달라짐. 0:검정 ~ 255:화이트. (r,g,b)로 지정가능. #색상코드로 지정가능.
               #(250,100) 식으로 하면 뒤의 값은 알파값이됨. 알파값=투명도.
line(x1,y1,x2,y2);  # 각 좌표 위치에 숫자 넣으면 그 좌표대로 선이 그어짐

point(x,y); #x,y좌표 입력하면 원하는 위치에 점이 생성

rectMode(CENTER); #사각형을 그리는 시작점을 사각형의 중심으로 설정. 밑에있는 rect에만 적용
rect(x,y,w,h); #x,y,는 시작하는 위치의 좌표 (사각형의 왼쪽 위의 점 기준), w는 넓이 h는 높이인 사각형 그리기

ellipse(x,y,w,h); #x,y,w,h을 넣으면 해당하는 타원 생성. x,y 좌표는 센터가 디폴트.

triangle(x1,y1,x2,y2,x3,y3); #삼각형의 좌표 넣으면 생성

beginShape();  #다각형 시작
vertex(x1,y1); #다각형의 점들 vertex 사용해서 지정
vertex(x2,y2);
...
endShape(CLOSE);  #다각형 닫기

stroke(x); #테두리 x에 색상값넣기
fill(x);   #내부 색상 x에 색상값 넣기
noFill(); #내부 비우기
noStroke(); #선 비우기
strokeWeight(x); #선 굵기 설정

void setup(){} #설정 함수 제작. 1번만 반복
void draw(){}  #그리기 함수 제작. 계속 반복 

(mouseX,mouseY); #마우스의 위치값 넣기 가능
(pmouseX,pmouseY); #이전 마우스 위치.
>> line(mouseX,mouseY,pmouseX,pmouseY); #이렇게 사용하면 선이 이어져서 그어짐

void mousePressed(){} #마우스 클릭시 실행 함수
void keyPressed(){} #키보드 키 누를시 실행되는 함수

println(x); #x의 값을 프린트해줌










// 2022.03.22 2주차

void mousePressed(){
    bakground(x);  #마우스 프레스드 함수 내부에 코드를 작성하면 마우스를 클릭 할때마다 이 작업이 실행됨
}
void keyPressed(){} #마우스 프레스와 동일하게 이 내부에 있는 코드는 키보드를 누를때마다 실행됨

variable 변수 
int: -3,-2,-1,0,1,2,3 ...
float: 5.93, 3.14 ...
char: a,b,c 
bool: true/false 

int circleSize = 500; #변수 이름 지정할때 이미 만들어져있는 이름은 피해서 선언하기
ellipse(x,y,circleSize,circleSize); #위에서 변수를 선언하고 밑에 사용을 하면 위의 변수를 바꿀때 밑에 해당 변수를 사용한 부분이 한번에 변경됨

width: 넓이 #width/2 작성시 중앙값이 나옴 (위치에 해당 값 넣으면 창의 중앙에 위치하게됨)
height: 높이
displayWidth: 모니터 넓이
displayHeight:모니터 넓이
mousePressed: 마우스 클릭 여부
keyPressed: 키 눌림여부
frameRate:초당 프레임수 #frameRate(x); 넣으면 프레임 속도 조절 가능
frameCount: 처리된 프레임 수

fullScreen(); #스크린 전체를 창 사이즈로 설정

random(x,y); #x부터 y-1까지의 숫자 중 랜덤으로 선택 (float)




//2022.03.29 3주차

++ -- #숫자가 1씩 증가 또는 감소
> < >= <= == !=  #~보다큰, ~보다 작은, 크거나 같은, 작거나 같은, 같은, 같지 아니한
if / else if / else #이 문구 뒤의것이 참인 경우에 해당하는 동작 실행 
&& || ! #and 둘 다 참인 경우, or 둘 중 하나만 참이어도, not 둘 다 참이 아닌경우
x = constrain(x,xMin,xMax); #x의 최대, 최소값을 지정해서 그 범위 밖으로 벗어나지 않도록 해준다 
